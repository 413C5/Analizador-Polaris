package proyecto1;
/* Generated By:JavaCC: Do not edit this line. ProyectoParcial1Constants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ProyectoParcial1Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ENTERO = 1;
  /** RegularExpression Id. */
  int FLOTANTE = 2;
  /** RegularExpression Id. */
  int STRING = 3;
  /** RegularExpression Id. */
  int LECTURA = 4;
  /** RegularExpression Id. */
  int IMPRIMIR = 5;
  /** RegularExpression Id. */
  int IF = 6;
  /** RegularExpression Id. */
  int FOR = 7;
  /** RegularExpression Id. */
  int ELSE_IF = 8;
  /** RegularExpression Id. */
  int ELSE = 9;
  /** RegularExpression Id. */
  int WHILE = 10;
  /** RegularExpression Id. */
  int ASIGNACION = 11;
  /** RegularExpression Id. */
  int SUMA = 12;
  /** RegularExpression Id. */
  int RESTA = 13;
  /** RegularExpression Id. */
  int MULTIPLICACION = 14;
  /** RegularExpression Id. */
  int DIVISION = 15;
  /** RegularExpression Id. */
  int MODULO = 16;
  /** RegularExpression Id. */
  int POTENCIA = 17;
  /** RegularExpression Id. */
  int RAIZ_CUADRADA = 18;
  /** RegularExpression Id. */
  int COMPARACION = 19;
  /** RegularExpression Id. */
  int MENOR_QUE = 20;
  /** RegularExpression Id. */
  int MAYOR_QUE = 21;
  /** RegularExpression Id. */
  int MENOR_IGUAL = 22;
  /** RegularExpression Id. */
  int MAYOR_IGUAL = 23;
  /** RegularExpression Id. */
  int AND = 24;
  /** RegularExpression Id. */
  int OR = 25;
  /** RegularExpression Id. */
  int NOT = 26;
  /** RegularExpression Id. */
  int PAR_IZQ = 27;
  /** RegularExpression Id. */
  int PAR_DER = 28;
  /** RegularExpression Id. */
  int BR_IZQ = 29;
  /** RegularExpression Id. */
  int BR_DER = 30;
  /** RegularExpression Id. */
  int CUR_IZQ = 31;
  /** RegularExpression Id. */
  int CUR_DER = 32;
  /** RegularExpression Id. */
  int PUNTO = 33;
  /** RegularExpression Id. */
  int PUNTO_COMA = 34;
  /** RegularExpression Id. */
  int VARIABLE = 35;
  /** RegularExpression Id. */
  int NUM_ENTERO = 36;
  /** RegularExpression Id. */
  int NUM_FLOTANTE = 37;
  /** RegularExpression Id. */
  int DIGITO = 38;
  /** RegularExpression Id. */
  int LETRA = 39;
  /** RegularExpression Id. */
  int CADENA = 40;
  /** RegularExpression Id. */
  int UNA_LINEA = 45;
  /** RegularExpression Id. */
  int MULTI_LINEA = 46;
  /** RegularExpression Id. */
  int FIN_MULTI_LINEA = 48;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int DENTRO_DEL_COMENTARIO = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"int\"",
    "\"float\"",
    "\"String\"",
    "\"readln\"",
    "\"writeln\"",
    "\"if\"",
    "\"for\"",
    "\"else if\"",
    "\"else\"",
    "\"while\"",
    "<ASIGNACION>",
    "<SUMA>",
    "<RESTA>",
    "<MULTIPLICACION>",
    "<DIVISION>",
    "<MODULO>",
    "<POTENCIA>",
    "<RAIZ_CUADRADA>",
    "<COMPARACION>",
    "<MENOR_QUE>",
    "<MAYOR_QUE>",
    "<MENOR_IGUAL>",
    "<MAYOR_IGUAL>",
    "<AND>",
    "<OR>",
    "<NOT>",
    "<PAR_IZQ>",
    "<PAR_DER>",
    "<BR_IZQ>",
    "<BR_DER>",
    "<CUR_IZQ>",
    "<CUR_DER>",
    "<PUNTO>",
    "<PUNTO_COMA>",
    "<VARIABLE>",
    "<NUM_ENTERO>",
    "<NUM_FLOTANTE>",
    "<DIGITO>",
    "<LETRA>",
    "<CADENA>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "<UNA_LINEA>",
    "\"/*\"",
    "<token of kind 47>",
    "\"*/\"",
    "\"++\"",
    "\"--\"",
  };

}
